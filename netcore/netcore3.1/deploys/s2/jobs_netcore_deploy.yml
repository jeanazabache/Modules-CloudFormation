## Estrategia con argumentos específicos en publicado, asimismo opción de CF
parameters:
  #Stage
  branch:
  # buildConfiguration: 'Release'
  argumentsPublish: '-c Release -o $(Build.ArtifactStagingDirectory)'
  publishProject: '*.csproj'
  deployS3: true
  awsCredentials:
  regionName:
  functionName:
  functionNameIsLowerCase: false
  s3BucketName:
  functionSecurityGroups:
  functionSubnets:
  functionDescription:
  functionHandler:
  functionRuntime:
  functionMemorySize:
  functionTimeout:
  functionRoleARN:
  functionEnvironments:
  tags:

  #Cloudformation
  enabledCloudformation: false
  fileCloudFormation: ''
  stackNameCF: ''
  templateParameters:
  roleArn:

  #Job
  jobEnvironment:

  #Azure
  azureSubscription:
  keyVaultName:
  #Email
  emailEnabled: false
  emailTo:
  emailCC:
  emailBCC:
  emailFrom:
  emailTitle:
  #Tag
  tagEnabled: false
  tagRepository: none
  tagName: 

jobs:
  - deployment: Deploy${{ parameters.jobEnvironment }}
    environment: ${{parameters.jobEnvironment}}
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - template: netcore_deploy.yml
            parameters:
              branch: ${{ parameters.branch}}
              argumentsPublish: ${{ parameters.argumentsPublish}}
              publishProject: ${{ parameters.publishProject}}
              deployS3: ${{ parameters.deployS3}}
              awsCredentials: ${{ parameters.awsCredentials}}
              regionName: ${{ parameters.regionName}}
              functionName: ${{ parameters.functionName}}
              functionNameIsLowerCase: ${{ parameters.functionNameIsLowerCase}}
              s3BucketName: ${{parameters.s3BucketName}}
              functionSecurityGroups: ${{ parameters.functionSecurityGroups}}
              functionSubnets: ${{ parameters.functionSubnets}}
              functionDescription: ${{ parameters.functionDescription}}
              functionHandler: ${{ parameters.functionHandler}}
              functionRuntime: ${{ parameters.functionRuntime}}
              functionMemorySize: ${{ parameters.functionMemorySize}}
              functionTimeout: ${{ parameters.functionTimeout}}
              functionRoleARN: ${{ parameters.functionRoleARN}}
              functionEnvironments: ${{ parameters.functionEnvironments}}
              tags: ${{ parameters.tags}}
              #Cloudformation
              enabledCloudformation: ${{ parameters.enabledCloudformation }}
              fileCloudFormation: ${{ parameters.fileCloudFormation }}
              stackNameCF: ${{ parameters.stackNameCF }}
              templateParameters: ${{ parameters.templateParameters }}
              roleArn: ${{ parameters.roleArn }}


  - template: /tools/jobs_common_tools.yml
    parameters:
      jobEnvironment: ${{ parameters.jobEnvironment }}
      dependsOn: Deploy${{ parameters.jobEnvironment }}
      #Email - Azure
      azureSubscription: ${{ parameters.azureSubscription }}
      keyVaultName: ${{ parameters.keyVaultName }}
      #Email
      emailEnabled: ${{ parameters.emailEnabled }}
      emailTo: ${{ parameters.emailTo }}
      emailCC: ${{ parameters.emailCC }}
      emailBCC: ${{ parameters.emailBCC }}
      emailFrom: ${{ parameters.emailFrom }}
      emailTitle: ${{ parameters.emailTitle }}
      #Tag
      tagEnabled: ${{ parameters.tagEnabled }}
      tagRepository: ${{ parameters.tagRepository }}
      tagName: ${{ parameters.tagName }}