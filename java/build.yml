parameters:
  versionSpec: ""
  branch: ""
  zipBuildPrefix: ""
  buildCommand: ""
  skypBuildArtifact: '*/\.* *.git* *azure-pipelines.yml*'
  taskCustomIsEnabled: false
  taskCustom: ""
  replaceEnvIsEnabled: false
  postReplaceEnv: false
  postReplaceEnvCommand: ""
  targetFiles: ""

steps:
  - script: |
      BRANCH=`echo ${{ parameters.branch }} | cut -d "/" -f3`
      BUILDFILENAME="${BRANCH}_build${{ parameters.zipBuildPrefix }}"
      
      echo "##vso[task.setvariable variable=branch]$BRANCH"
      echo "##vso[task.setvariable variable=buildFileName]$BUILDFILENAME"
    displayName: "Prepare strategy"
  
  - ${{ if eq(parameters['taskCustomIsEnabled'], 'true') }}:
      - ${{ parameters.taskCustom }}
  
  - ${{ if eq(parameters['replaceEnvIsEnabled'], 'true') }}:
      - task: replacetokens@3
        condition: and(succeeded(), eq('${{ parameters.replaceEnvIsEnabled }}', 'true'))
        displayName: "Replacement value of enviroment"
        inputs:
          targetFiles: "${{ parameters.targetFiles }}"
          encoding: "auto"
          writeBOM: true
          verbosity: "detailed"
          actionOnMissing: "warn"
          keepToken: false
          tokenPrefix: "###{"
          tokenSuffix: "}###"
          useLegacyPattern: false
          enableTelemetry: true
  
  - ${{ if eq(parameters['postReplaceEnv'], 'true') }}:
      - ${{ parameters.postReplaceEnvCommand }}

  - script: ${{ parameters.buildCommand }}
    condition: succeeded()
    displayName: "build command"

  - script: |
      zip -rq $(buildFileName).zip . -x ${{parameters.skypBuildArtifact}}
    displayName: 'Generate "zip" of the build'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish "zip" in Artifact'
    inputs:
      pathToPublish: "$(buildFileName).zip"
      artifactName: "$(branch)"