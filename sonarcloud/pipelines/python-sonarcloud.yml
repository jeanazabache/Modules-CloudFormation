parameters:
  sonarOrganization: 'utp'
  sonarConnection: ''
  sonarProjectKey: ''
  sonarExclusions: ''
  sonarCoverageExclusions: ''
  sonarSources: ''
  installCommand: ''
  testsCommand: ''
  pythonVersion: ''

steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
    displayName: 'Instalación de Python'

  - script: ${{ parameters.installCommand }}
    displayName: 'Instalación de dependencias'

  - script: ${{ parameters.testsCommand }}
    displayName: 'Ejecución de pruebas'
    continueOnError: true

  - task: SonarCloudPrepare@2
    inputs:
      SonarCloud: ${{ parameters.sonarConnection }}
      organization: ${{ parameters.sonarOrganization }}
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: ${{ parameters.sonarProjectKey }}
      cliProjectName: ${{ parameters.sonarProjectKey }}
      cliSources: '.'
      extraProperties: |
        sonar.exclusions=${{ parameters.sonarExclusions }}
        sonar.coverage.exclusions=${{ parameters.sonarCoverageExclusions }}
        sonar.sourceEncoding=UTF-8
        sonar.language=python
        sonar.python.coverage.reportPaths=${{parameters.sonarReportPaths}}

  - task: SonarCloudAnalyze@2
    displayName: 'Análisis de Código con SonarCloud'

  - task: SonarCloudPublish@2
    displayName: 'Publicar Resultados de Quality Gate'
    inputs:
      pollingTimeoutSec: '300'