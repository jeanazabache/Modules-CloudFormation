# trigger:
# - main

# pool:
#   vmImage: 'ubuntu-latest'

# variables:
#   sonarProjectKey: 'A252-38-front-mel2web'
#   sonarOrganization: 'utp'
#   sonarScannerVersion: '4.8.0.2856'

parameters:
  sonarOrganization: 'utp'
  sonarConnection: ''
  sonarProjectKey: ''
  sonarExclusions: ''
  sonarCoverageExclusions: ''
  nodesourceUrl: 'https://deb.nodesource.com/setup_21.x'
  installCommand: ''
  testsCommand: ''
  sonarSources: ''
  nodeVersion: '18.x'
  folderSonarTest: 'sonar.tests=src/__test__'
  sonarTestInclusions: 'sonar.test.inclusions=**/__test__/**/*'
  sonarReportPaths: 'sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/jacoco/lcov.info'

steps:

  - task: NodeTool@0
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}
    displayName: 'Instalando Node.js'

  # - script: |
  #     echo "Installing Node.js:"
  #     curl -sL ${{ parameters.nodesourceUrl }}  | sudo -E bash -
  #     sudo apt-get install -y nodejs
  #     node --version
  #     npm --version
  #   displayName: 'Install Node.js'

  - script: ${{ parameters.installCommand }}
    displayName: 'Install dependencies'

  - script: ${{ parameters.testsCommand }}
    displayName: 'Run tests'
    continueOnError: true

  - task: SonarCloudPrepare@2
    inputs:
      SonarCloud: ${{ parameters.sonarConnection }}
      organization: ${{ parameters.sonarOrganization }}
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: ${{ parameters.sonarProjectKey }}
      cliProjectName: ${{ parameters.sonarProjectKey }}
      cliSources: '.'
      extraProperties: |
            # Additional properties that will be passed to the scanner,
            # Put one key=value per line, example:
            sonar.exclusions=**/node_modules/**${{ parameters.sonarExclusions }}
            sonar.coverage.exclusions=${{ parameters.sonarCoverageExclusions }}
            sonar.sourceEncoding=UTF-8
            sonar.language=java
            sonar.java.experimental.batchModeSizeInKB=8192000
            sonar.java.coveragePlugin=jacoco
            #sonar.coverage.jacoco.xmlReportPaths=coverage/jacoco/clover.xml
            # sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/jacoco/lcov.info
            ${{parameters.sonarReportPaths}}
            #sonar.tests=src/__test__
            #sonar.test.inclusions=**/__test__/**/*
            ${{ parameters.folderSonarTest }}
            ${{ parameters.sonarTestInclusions }}
            $[ if ne(parameters.sonarSources, '') ]: sonar.sources=${{ parameters.sonarSources }}

  - task: SonarCloudAnalyze@2
    displayName: 'Run Code Analysis'

  - task: SonarCloudPublish@2
    displayName: 'Publish Quality Gate Result'
    inputs:
          pollingTimeoutSec: '300'
